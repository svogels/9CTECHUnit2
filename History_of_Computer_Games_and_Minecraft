<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Differentiated Learning Activities: Game Design</title>
    <script src="https://cdn.tailwindcss.com"></script>
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap" rel="stylesheet">
    <link href="https://fonts.googleapis.com/css?family=Open+Sans&display=swap" rel="stylesheet">
    <style>
        body {
            font-family: 'Inter', sans-serif;
            background-color: #f8f9fa;
            color: #343a40;
        }
        /* Dyslexia-friendly font */
        .font-dyslexia {
            font-family: 'Open Sans', sans-serif;
        }
        .activity-tab {
            transition: all 0.3s ease;
            border-bottom: 4px solid transparent;
        }
        .activity-tab.active {
            border-bottom-color: #4a90e2;
            color: #4a90e2;
            font-weight: 600;
        }
        .student-select {
            -webkit-appearance: none;
            -moz-appearance: none;
            appearance: none;
            background-image: url('data:image/svg+xml;charset=US-ASCII,%3Csvg%20xmlns%3D%22http%3A%2F%2Fwww.w3.org%2F2000%2Fsvg%22%20width%3D%22292.4%22%20height%3D%22292.4%22%3E%3Cpath%20fill%3D%22%234A90E2%22%20d%3D%22M287%2069.4a17.6%2017.6%200%200%200-13-5.4H18.4c-5%200-9.3%201.8-12.9%205.4A17.6%2017.6%200%200%200%200%2082.2c0%205%201.8%209.3%205.4%2012.9l128%20127.9c3.6%203.6%207.8%205.4%2012.8%205.4s9.2-1.8%2012.8-5.4L287%2095c3.5-3.5%205.4-7.8%205.4-12.8%200-5-1.9-9.2-5.5-12.8z%22%2F%3E%3C%2Fsvg%3E');
            background-repeat: no-repeat;
            background-position: right 0.7em top 50%, 0 0;
            background-size: 0.65em auto, 100%;
        }
        .timeline-era {
            border-left: 4px solid #e9ecef;
            min-height: 150px;
        }
        .timeline-item {
            cursor: grab;
            transition: all 0.2s ease;
        }
        .timeline-item:active {
            cursor: grabbing;
            transform: scale(1.05);
            box-shadow: 0 8px 25px rgba(0,0,0,0.2);
            z-index: 10;
        }
        .drop-zone {
            border: 2px dashed #ced4da;
            transition: background-color 0.3s;
        }
        .drop-zone.over {
            background-color: #e2eefc;
        }
        .feedback {
            transition: opacity 0.5s ease;
        }
        .read-aloud-btn {
            cursor: pointer;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            background-color: #e7f3ff;
            color: #4a90e2;
            padding: 0.25rem 0.5rem;
            border-radius: 9999px;
            font-size: 0.875rem;
            font-weight: 500;
        }
        .read-aloud-btn:hover {
            background-color: #d0e7ff;
        }
        .mcq-option {
            border: 2px solid #dee2e6;
            transition: all 0.2s ease;
        }
        .mcq-option:hover {
            border-color: #4a90e2;
            background-color: #f8f9fa;
        }
        .mcq-option.correct {
            background-color: #d4edda;
            border-color: #c3e6cb;
        }
        .mcq-option.incorrect {
            background-color: #f8d7da;
            border-color: #f5c6cb;
        }
        .hidden-by-default { display: none; }
        .zen-mode .distraction {
            display: none !important;
        }
    </style>
</head>
<body class="p-4 md:p-8">

    <div id="app-container" class="max-w-7xl mx-auto bg-white rounded-2xl shadow-lg p-6 md:p-8">
        
        <!-- Header and Student Selector -->
        <header class="text-center mb-8">
            <h1 class="text-3xl md:text-4xl font-bold text-gray-800">Interactive Learning: Game Design</h1>
            <p class="mt-2 text-gray-600">Activities adapted for Year 9 Computer Technology.</p>
            <div class="mt-6 max-w-sm mx-auto">
                <label for="student-selector" class="block text-sm font-medium text-gray-700 mb-1">Select Student View:</label>
                <select id="student-selector" class="student-select w-full bg-white border border-gray-300 text-gray-700 py-2 px-3 pr-8 rounded-lg shadow-sm focus:outline-none focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
                    <option value="general">General Classroom</option>
                    <option value="alexia">Alexia Leonardo (ASD, Cognitive Delay)</option>
                    <option value="stephen">Stephen Liakos (Mild Intellectual Disability)</option>
                    <option value="glenden">Glenden Benny-Peter (Reading Comprehension)</option>
                    <option value="ishavdeep">Ishavdeep Singh (Reading Comprehension/Decoding)</option>
                    <option value="jack">Jack Jones (ADHD, ODD, Dyslexia)</option>
                    <option value="leo">Leo Ruffin (Focus/Attention)</option>
                </select>
            </div>
        </header>

        <!-- Activity Tabs -->
        <div class="border-b border-gray-200 mb-6">
            <nav class="flex justify-center -mb-px space-x-8" aria-label="Tabs">
                <button id="tab-history" class="activity-tab active py-4 px-1 text-center text-gray-500 hover:text-gray-700 text-lg">History of Games</button>
                <button id="tab-minecraft" class="activity-tab py-4 px-1 text-center text-gray-500 hover:text-gray-700 text-lg">Creator of Minecraft</button>
            </nav>
        </div>

        <!-- Main Content Area -->
        <main id="main-content">
            <!-- History of Games Activity -->
            <div id="activity-history">
                <!-- Activity Instructions -->
                <div id="history-instructions" class="bg-blue-50 p-4 rounded-lg mb-6">
                    <h2 class="text-xl font-bold text-blue-800">Activity: History of Games Timeline</h2>
                    <p class="text-blue-700 mt-1" data-profile="general">Drag and drop each game or technology into the correct era to build the timeline.</p>
                    <p class="text-blue-700 mt-1 hidden-by-default" data-profile="alexia stephen">Click on each timeline era to learn about it.</p>
                    <p class="text-blue-700 mt-1 hidden-by-default" data-profile="glenden ishavdeep jack">Drag and drop the game images into the correct era. Use the <span class="font-bold">Read Aloud</span> <span class="read-aloud-btn text-xs">ðŸ”Š</span> button if you need help with the text.</p>
                    <p class="text-blue-700 mt-1 hidden-by-default" data-profile="leo">Complete one era at a time. Drag the item to the correct spot to reveal the next one!</p>
                    <p class="text-blue-700 mt-1 hidden-by-default" data-profile="jack">Mission: Sort the timeline as fast as you can! A score and timer will appear.</p>
                </div>
                
                <div id="jack-gamification" class="hidden-by-default" data-profile="jack">
                     <div class="flex justify-center space-x-8 mb-4 text-xl font-bold">
                        <p>Score: <span id="jack-score">0</span></p>
                        <p>Time: <span id="jack-timer">0s</span></p>
                    </div>
                </div>

                <!-- Draggable Items -->
                <div id="timeline-items-pool" class="flex flex-wrap justify-center gap-4 mb-8 p-4 bg-gray-100 rounded-lg">
                    <!-- Items will be dynamically inserted here by JS -->
                </div>

                <!-- Timeline Eras -->
                <div id="timeline" class="space-y-8">
                    <!-- Eras will be dynamically inserted here by JS -->
                </div>
                <div id="history-feedback" class="mt-6 text-center font-bold text-2xl h-8"></div>
            </div>

            <!-- Minecraft Creator Activity -->
            <div id="activity-minecraft" class="hidden-by-default">
                <div class="bg-green-50 p-4 rounded-lg mb-6">
                    <h2 class="text-xl font-bold text-green-800">Activity: The Creator of Minecraft</h2>
                    <p class="text-green-700 mt-1" data-profile="general">Read the passages about Markus 'Notch' Persson and answer the questions.</p>
                    <p class="text-green-700 mt-1 hidden-by-default" data-profile="alexia stephen">Read the simple facts and answer the questions.</p>
                    <p class="text-green-700 mt-1 hidden-by-default" data-profile="glenden ishavdeep jack">Read the passages about Markus 'Notch' Persson. Use the <span class="font-bold">Read Aloud</span> <span class="read-aloud-btn text-xs">ðŸ”Š</span> button for help, then answer the questions.</p>
                    <p class="text-green-700 mt-1 hidden-by-default" data-profile="leo">Read one short section at a time and answer the question before moving on.</p>
                </div>
                <div id="minecraft-content" class="max-w-4xl mx-auto space-y-6">
                    <!-- Content will be dynamically inserted here -->
                </div>
            </div>
        </main>
    </div>

    <script>
        // --- DATA ---
        const historyData = [
            { id: 'item1', era: 'mainframe', title: 'Tennis for Two', content: 'One of the first electronic games, created on an oscilloscope.', img: 'https://placehold.co/100x100/4a90e2/ffffff?text=Tennis' },
            { id: 'item2', era: 'arcade', title: 'Pong', content: 'A smash hit arcade game that brought video games to the mainstream.', img: 'https://placehold.co/100x100/4a90e2/ffffff?text=Pong' },
            { id: 'item3', era: 'arcade', title: 'Space Invaders', content: 'A classic shooter that defined a generation of arcade games.', img: 'https://placehold.co/100x100/4a90e2/ffffff?text=Invaders' },
            { id: 'item4', era: 'home', title: 'Atari 2600', content: 'A popular early home console that used interchangeable game cartridges.', img: 'https://placehold.co/100x100/4a90e2/ffffff?text=Atari' },
            { id: 'item5', era: 'online', title: 'Online Gaming', content: 'The internet allowed players to compete with each other from around the world.', img: 'https://placehold.co/100x100/4a90e2/ffffff?text=Online' },
            { id: 'item6', era: 'mobile', title: 'Snake on Nokia Phones', content: 'A simple but addictive game that made mobile gaming popular.', img: 'https://placehold.co/100x100/4a90e2/ffffff?text=Snake' },
        ];

        const timelineEras = [
            { id: 'mainframe', title: 'The Earliest Mainframe Games (1950s-60s)', content: 'Games were created by scientists on huge, room-sized computers.' },
            { id: 'arcade', title: 'The Era of Arcade Games (1970s-80s)', content: 'Coin-operated machines appeared in arcades and shops.' },
            { id: 'home', title: 'Programmable Home Consoles (Late 1970s-80s)', content: 'Consoles like Atari brought gaming into the living room.' },
            { id: 'online', title: 'Online Gaming (1990s)', content: 'The internet connected players globally for multiplayer games.' },
            { id: 'mobile', title: 'The Mobile Revolution (2000s)', content: 'Games on mobile phones became very popular.' },
        ];
        
        const minecraftData = [
            {
                profile: ['general', 'glenden', 'ishavdeep', 'jack', 'leo'],
                type: 'passage',
                content: `The best-selling video game of all time is Minecraft, officially launched in 2011. It's a sandbox game where players have unlimited freedom. The game operates in several different modes, such as survival mode, where players must gather resources to protect themselves, and creative mode, where players have unlimited resources to build.`
            },
            {
                profile: ['alexia', 'stephen'],
                type: 'passage',
                content: `Minecraft is a very popular game. You can build things with blocks. In 'Creative Mode', you have all the blocks you want.`
            },
            {
                profile: ['general', 'glenden', 'ishavdeep', 'jack', 'leo'],
                type: 'question',
                question: "In which mode do players have unlimited resources?",
                options: ["Survival Mode", "Creative Mode", "Adventure Mode"],
                answer: "Creative Mode"
            },
            {
                profile: ['alexia', 'stephen'],
                type: 'question',
                question: "In Creative Mode, do you have unlimited blocks?",
                options: ["Yes", "No"],
                answer: "Yes"
            },
            {
                profile: ['general', 'glenden', 'ishavdeep', 'jack', 'leo'],
                type: 'passage',
                content: `In 2009, Swedish programmer Markus 'Notch' Persson was developing his own games at home. He was inspired by other games like Dwarf Fortress and Infiniminer. He realized that digging, exploring, and building were more fun from a first-person point of view.`
            },
            {
                profile: ['alexia', 'stephen'],
                type: 'passage',
                content: `A man named Markus Persson made Minecraft. He got ideas from other games.`
            },
            {
                profile: ['general', 'glenden', 'ishavdeep', 'jack', 'leo'],
                type: 'passage',
                content: `When asked how he codes, Persson explained, "I kind of 'code-sketch'. I get started with a project by actually writing the code for it and getting something up on the screen. Then I play around with it and see if it's any fun, and change the parts that aren't." His girlfriend was his first tester, and he said her feedback was very important.`
            },
            {
                profile: ['alexia', 'stephen'],
                type: 'passage',
                content: `Markus would write some code, then play the game to see if it was fun. His girlfriend tested the game and gave him feedback.`
            },
            {
                profile: ['general', 'glenden', 'ishavdeep', 'jack', 'leo'],
                type: 'question',
                question: "What is one practice Markus Persson used when developing Minecraft?",
                options: ["Writing a full plan before coding", "Coding a little bit and then testing if it's fun", "Only getting feedback from other professional developers"],
                answer: "Coding a little bit and then testing if it's fun"
            },
            {
                profile: ['alexia', 'stephen'],
                type: 'question',
                question: "Did Markus Persson test his game to see if it was fun?",
                options: ["Yes", "No"],
                answer: "Yes"
            }
        ];

        // --- DOM ELEMENTS ---
        const studentSelector = document.getElementById('student-selector');
        const appContainer = document.getElementById('app-container');
        const mainContent = document.getElementById('main-content');
        const tabHistory = document.getElementById('tab-history');
        const tabMinecraft = document.getElementById('tab-minecraft');
        const activityHistory = document.getElementById('activity-history');
        const activityMinecraft = document.getElementById('activity-minecraft');

        // --- STATE ---
        let currentProfile = 'general';
        let jackScore = 0;
        let jackTimerInterval;
        let leoItemIndex = 0;

        // --- SPEECH SYNTHESIS ---
        const synth = window.speechSynthesis;
        function speak(text) {
            if (synth.speaking) {
                synth.cancel();
            }
            const utterance = new SpeechSynthesisUtterance(text);
            utterance.onerror = (event) => console.error('SpeechSynthesisUtterance.onerror', event);
            synth.speak(utterance);
        }

        // --- RENDER FUNCTIONS ---
        function renderHistoryActivity() {
            const itemsPool = document.getElementById('timeline-items-pool');
            const timelineContainer = document.getElementById('timeline');
            const feedbackEl = document.getElementById('history-feedback');
            
            itemsPool.innerHTML = '';
            timelineContainer.innerHTML = '';
            feedbackEl.textContent = '';
            leoItemIndex = 0;

            const itemsForProfile = currentProfile === 'leo' ? [historyData[0]] : historyData;

            // Render Draggable Items
            if (currentProfile !== 'alexia' && currentProfile !== 'stephen') {
                itemsPool.classList.remove('hidden-by-default');
                itemsForProfile.forEach(item => {
                    const itemEl = document.createElement('div');
                    itemEl.id = item.id;
                    itemEl.dataset.era = item.era;
                    itemEl.draggable = true;
                    itemEl.className = 'timeline-item bg-white p-2 rounded-lg shadow flex items-center gap-3';
                    
                    let contentHTML = `<img src="${item.img}" alt="${item.title}" class="w-12 h-12 rounded-md">`;
                    
                    if (currentProfile !== 'glenden' && currentProfile !== 'ishavdeep' && currentProfile !== 'jack') {
                         contentHTML += `<span class="font-semibold">${item.title}</span>`;
                    }
                    
                    itemEl.innerHTML = contentHTML;
                    itemsPool.appendChild(itemEl);
                });
            } else {
                 itemsPool.classList.add('hidden-by-default');
            }

            // Render Timeline Eras
            timelineEras.forEach(era => {
                const eraEl = document.createElement('div');
                eraEl.className = 'timeline-era pl-8 relative';
                
                let contentHTML = `
                    <div class="absolute -left-2.5 top-0 w-5 h-5 bg-blue-500 rounded-full border-4 border-white"></div>
                    <h3 class="text-lg font-bold text-gray-700">${era.title}</h3>`;
                
                if (currentProfile === 'alexia' || currentProfile === 'stephen') {
                    eraEl.innerHTML += `<p class="text-gray-600">${era.content}</p>`;
                    eraEl.classList.add('cursor-pointer', 'hover:bg-gray-50', 'p-4', 'rounded-r-lg');
                    eraEl.onclick = () => speak(`${era.title}. ${era.content}`);
                } else {
                    contentHTML += `<div class="drop-zone mt-2 p-4 rounded-lg min-h-[80px] w-full" data-era="${era.id}"></div>`;
                }

                eraEl.innerHTML += contentHTML;
                timelineContainer.appendChild(eraEl);
            });
            
            addDragAndDropListeners();
        }

        function renderMinecraftActivity() {
            const container = document.getElementById('minecraft-content');
            container.innerHTML = '';
            let questionCount = 0;

            minecraftData.forEach((item, index) => {
                if (item.profile.includes(currentProfile)) {
                    const el = document.createElement('div');
                    if (item.type === 'passage') {
                        el.className = 'prose max-w-none';
                        el.innerHTML = `<p>${item.content} <button class="read-aloud-btn" data-text="${item.content}">ðŸ”Š</button></p>`;
                    } else if (item.type === 'question') {
                        questionCount++;
                        el.className = 'p-4 border border-gray-200 rounded-lg shadow-sm';
                        let optionsHTML = item.options.map(opt => 
                            `<button class="mcq-option block w-full text-left p-3 mt-2 rounded-lg" data-answer="${item.answer}" data-option="${opt}">
                                ${opt} <button class="read-aloud-btn" data-text="${opt}">ðŸ”Š</button>
                            </button>`
                        ).join('');
                        el.innerHTML = `
                            <p class="font-semibold">${item.question} <button class="read-aloud-btn" data-text="${item.question}">ðŸ”Š</button></p>
                            <div class="mt-2">${optionsHTML}</div>
                            <div class="feedback mt-2 h-6 font-semibold"></div>
                        `;
                    }
                    
                    if (currentProfile === 'leo' && index > 1) {
                        el.classList.add('hidden-by-default');
                    }
                    container.appendChild(el);
                }
            });
            
            addMinecraftListeners();
        }

        // --- EVENT LISTENERS & LOGIC ---
        function addDragAndDropListeners() {
            const items = document.querySelectorAll('.timeline-item');
            const dropZones = document.querySelectorAll('.drop-zone');

            items.forEach(item => {
                item.addEventListener('dragstart', (e) => {
                    e.dataTransfer.setData('text/plain', e.target.id);
                    setTimeout(() => item.classList.add('opacity-50'), 0);
                });
                item.addEventListener('dragend', () => item.classList.remove('opacity-50'));
            });

            dropZones.forEach(zone => {
                zone.addEventListener('dragover', (e) => {
                    e.preventDefault();
                    zone.classList.add('over');
                });
                zone.addEventListener('dragleave', () => zone.classList.remove('over'));
                zone.addEventListener('drop', (e) => {
                    e.preventDefault();
                    zone.classList.remove('over');
                    const id = e.dataTransfer.getData('text/plain');
                    const draggable = document.getElementById(id);
                    
                    const feedbackEl = document.getElementById('history-feedback');
                    if (draggable && draggable.dataset.era === zone.dataset.era) {
                        zone.appendChild(draggable);
                        draggable.draggable = false;
                        draggable.style.cursor = 'default';
                        feedbackEl.textContent = 'Correct!';
                        feedbackEl.className = 'mt-6 text-center font-bold text-2xl h-8 text-green-500';

                        if (currentProfile === 'jack') {
                            jackScore += 10;
                            document.getElementById('jack-score').textContent = jackScore;
                        }
                        if (currentProfile === 'leo') {
                            leoItemIndex++;
                            if(historyData[leoItemIndex]) {
                                showNextLeoItem();
                            } else {
                                feedbackEl.textContent = 'All Done! Great focus!';
                            }
                        }

                    } else {
                        feedbackEl.textContent = 'Try Again!';
                        feedbackEl.className = 'mt-6 text-center font-bold text-2xl h-8 text-red-500';
                    }
                    setTimeout(() => feedbackEl.textContent = '', 2000);
                });
            });
        }
        
        function showNextLeoItem() {
            const itemsPool = document.getElementById('timeline-items-pool');
            const item = historyData[leoItemIndex];
            const itemEl = document.createElement('div');
            itemEl.id = item.id;
            itemEl.dataset.era = item.era;
            itemEl.draggable = true;
            itemEl.className = 'timeline-item bg-white p-2 rounded-lg shadow flex items-center gap-3';
            itemEl.innerHTML = `<img src="${item.img}" alt="${item.title}" class="w-12 h-12 rounded-md">`;
            itemsPool.appendChild(itemEl);
            addDragAndDropListeners(); // Re-attach listeners to new item
        }

        function addMinecraftListeners() {
            document.querySelectorAll('.mcq-option').forEach(button => {
                button.addEventListener('click', (e) => {
                    const selectedOption = e.currentTarget.dataset.option;
                    const correctAnswer = e.currentTarget.dataset.answer;
                    const parent = e.currentTarget.parentElement;
                    const feedbackEl = parent.nextElementSibling;

                    // Disable all buttons in this question
                    parent.querySelectorAll('.mcq-option').forEach(btn => btn.disabled = true);

                    if (selectedOption === correctAnswer) {
                        e.currentTarget.classList.add('correct');
                        feedbackEl.textContent = 'Correct!';
                        feedbackEl.classList.add('text-green-600');
                        if (currentProfile === 'leo' && e.currentTarget.closest('.p-4').nextElementSibling) {
                           e.currentTarget.closest('.p-4').nextElementSibling.classList.remove('hidden-by-default');
                           if(e.currentTarget.closest('.p-4').nextElementSibling.nextElementSibling){
                                e.currentTarget.closest('.p-4').nextElementSibling.nextElementSibling.classList.remove('hidden-by-default');
                           }
                        }
                    } else {
                        e.currentTarget.classList.add('incorrect');
                        feedbackEl.textContent = `Not quite. The correct answer was ${correctAnswer}.`;
                        feedbackEl.classList.add('text-red-600');
                    }
                });
            });
            
            // Add listeners for all read aloud buttons
            document.querySelectorAll('.read-aloud-btn').forEach(btn => {
                btn.addEventListener('click', (e) => {
                    e.stopPropagation();
                    speak(e.currentTarget.dataset.text);
                });
            });
        }
        
        function updateViewForProfile() {
            // Update instruction texts
            document.querySelectorAll('#history-instructions p, #activity-minecraft p').forEach(p => {
                if (p.dataset.profile === currentProfile) {
                    p.classList.remove('hidden-by-default');
                } else {
                    p.classList.add('hidden-by-default');
                }
            });

            // Handle dyslexia font
            if (currentProfile === 'jack') {
                appContainer.classList.add('font-dyslexia');
            } else {
                appContainer.classList.remove('font-dyslexia');
            }
            
            // Handle Zen Mode for focus
            if (currentProfile === 'alexia' || currentProfile === 'leo') {
                appContainer.classList.add('zen-mode');
            } else {
                appContainer.classList.remove('zen-mode');
            }

            // Handle Jack's gamification UI
            const jackUI = document.getElementById('jack-gamification');
            if (currentProfile === 'jack') {
                jackUI.classList.remove('hidden-by-default');
                jackScore = 0;
                document.getElementById('jack-score').textContent = '0';
                let seconds = 0;
                document.getElementById('jack-timer').textContent = '0s';
                clearInterval(jackTimerInterval);
                jackTimerInterval = setInterval(() => {
                    seconds++;
                    document.getElementById('jack-timer').textContent = `${seconds}s`;
                }, 1000);
            } else {
                jackUI.classList.add('hidden-by-default');
                clearInterval(jackTimerInterval);
            }
            
            // Hide read-aloud buttons for profiles that don't need them
            const showReadAloud = ['glenden', 'ishavdeep', 'jack'].includes(currentProfile);
             document.querySelectorAll('.read-aloud-btn').forEach(btn => {
                btn.style.display = showReadAloud ? 'inline-flex' : 'none';
            });


            // Re-render content
            if (!activityHistory.classList.contains('hidden-by-default')) {
                renderHistoryActivity();
            } else {
                renderMinecraftActivity();
            }
        }

        // --- INITIALIZATION ---
        studentSelector.addEventListener('change', (e) => {
            currentProfile = e.target.value;
            updateViewForProfile();
        });

        tabHistory.addEventListener('click', () => {
            tabHistory.classList.add('active');
            tabMinecraft.classList.remove('active');
            activityHistory.classList.remove('hidden-by-default');
            activityMinecraft.classList.add('hidden-by-default');
            renderHistoryActivity();
        });

        tabMinecraft.addEventListener('click', () => {
            tabMinecraft.classList.add('active');
            tabHistory.classList.remove('active');
            activityMinecraft.classList.remove('hidden-by-default');
            activityHistory.classList.add('hidden-by-default');
            renderMinecraftActivity();
        });

        // Initial Render
        updateViewForProfile();

    </script>
</body>
</html>
